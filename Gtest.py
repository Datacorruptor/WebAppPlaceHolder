import GermanKoryagin as w2n
import AncientRus as AR
from unittest import TestCase


class TestConverter(TestCase):
    def test_hardcoded_values_upto_100(self):
        self.assertTrue(w2n.convert('eins') == 1)
        self.assertTrue(w2n.convert('zwei') == 2)
        self.assertTrue(w2n.convert('drei') == 3)
        self.assertTrue(w2n.convert('vier') == 4)
        self.assertTrue(w2n.convert('fünf') == 5)
        self.assertTrue(w2n.convert('sechs') == 6)
        self.assertTrue(w2n.convert('sieben') == 7)
        self.assertTrue(w2n.convert('acht') == 8)
        self.assertTrue(w2n.convert('neun') == 9)
        self.assertTrue(w2n.convert('zehn') == 10)
        self.assertTrue(w2n.convert('elf') == 11)
        self.assertTrue(w2n.convert('zwölf') == 12)
        self.assertTrue(w2n.convert('dreizehn') == 13)
        self.assertTrue(w2n.convert('vierzehn') == 14)
        self.assertTrue(w2n.convert('fünfzehn') == 15)
        self.assertTrue(w2n.convert('sechzehn') == 16)
        self.assertTrue(w2n.convert('siebzehn') == 17)
        self.assertTrue(w2n.convert('achtzehn') == 18)
        self.assertTrue(w2n.convert('neunzehn') == 19)
        self.assertTrue(w2n.convert('zwanzig') == 20)
        self.assertTrue(w2n.convert('ein und zwanzig') == 21)
        self.assertTrue(w2n.convert('zwei und zwanzig') == 22)
        self.assertTrue(w2n.convert('drei und zwanzig') == 23)
        self.assertTrue(w2n.convert('vier und zwanzig') == 24)
        self.assertTrue(w2n.convert('fünf und zwanzig') == 25)
        self.assertTrue(w2n.convert('sechs und zwanzig') == 26)
        self.assertTrue(w2n.convert('sieben und zwanzig') == 27)
        self.assertTrue(w2n.convert('acht und zwanzig') == 28)
        self.assertTrue(w2n.convert('neun und zwanzig') == 29)
        self.assertTrue(w2n.convert('dreißig') == 30)
        self.assertTrue(w2n.convert('ein und dreißig') == 31)
        self.assertTrue(w2n.convert('zwei und dreißig') == 32)
        self.assertTrue(w2n.convert('drei und dreißig') == 33)
        self.assertTrue(w2n.convert('vier und dreißig') == 34)
        self.assertTrue(w2n.convert('fünf und dreißig') == 35)
        self.assertTrue(w2n.convert('sechs und dreißig') == 36)
        self.assertTrue(w2n.convert('sieben und dreißig') == 37)
        self.assertTrue(w2n.convert('acht und dreißig') == 38)
        self.assertTrue(w2n.convert('neun und dreißig') == 39)
        self.assertTrue(w2n.convert('vierzig') == 40)
        self.assertTrue(w2n.convert('ein und vierzig') == 41)
        self.assertTrue(w2n.convert('zwei und vierzig') == 42)
        self.assertTrue(w2n.convert('drei und vierzig') == 43)
        self.assertTrue(w2n.convert('vier und vierzig') == 44)
        self.assertTrue(w2n.convert('fünf und vierzig') == 45)
        self.assertTrue(w2n.convert('sechs und vierzig') == 46)
        self.assertTrue(w2n.convert('sieben und vierzig') == 47)
        self.assertTrue(w2n.convert('acht und vierzig') == 48)
        self.assertTrue(w2n.convert('neun und vierzig') == 49)
        self.assertTrue(w2n.convert('fünfzig') == 50)
        self.assertTrue(w2n.convert('ein und fünfzig') == 51)
        self.assertTrue(w2n.convert('zwei und fünfzig') == 52)
        self.assertTrue(w2n.convert('drei und fünfzig') == 53)
        self.assertTrue(w2n.convert('vier und fünfzig') == 54)
        self.assertTrue(w2n.convert('fünf und fünfzig') == 55)
        self.assertTrue(w2n.convert('sechs und fünfzig') == 56)
        self.assertTrue(w2n.convert('sieben und fünfzig') == 57)
        self.assertTrue(w2n.convert('acht und fünfzig') == 58)
        self.assertTrue(w2n.convert('neun und fünfzig') == 59)
        self.assertTrue(w2n.convert('sechzig') == 60)
        self.assertTrue(w2n.convert('ein und sechzig') == 61)
        self.assertTrue(w2n.convert('zwei und sechzig') == 62)
        self.assertTrue(w2n.convert('drei und sechzig') == 63)
        self.assertTrue(w2n.convert('vier und sechzig') == 64)
        self.assertTrue(w2n.convert('fünf und sechzig') == 65)
        self.assertTrue(w2n.convert('sechs und sechzig') == 66)
        self.assertTrue(w2n.convert('sieben und sechzig') == 67)
        self.assertTrue(w2n.convert('acht und sechzig') == 68)
        self.assertTrue(w2n.convert('neun und sechzig') == 69)
        self.assertTrue(w2n.convert('siebzig') == 70)
        self.assertTrue(w2n.convert('ein und siebzig') == 71)
        self.assertTrue(w2n.convert('zwei und siebzig') == 72)
        self.assertTrue(w2n.convert('drei und siebzig') == 73)
        self.assertTrue(w2n.convert('vier und siebzig') == 74)
        self.assertTrue(w2n.convert('fünf und siebzig') == 75)
        self.assertTrue(w2n.convert('     sechs          und      siebzig     ') == 76)
        self.assertTrue(w2n.convert('sieben und siebzig') == 77)
        self.assertTrue(w2n.convert('acht und siebzig') == 78)
        self.assertTrue(w2n.convert('neun und siebzig') == 79)
        self.assertTrue(w2n.convert('achtzig') == 80)
        self.assertTrue(w2n.convert('ein und achtzig') == 81)
        self.assertTrue(w2n.convert('zwei und achtzig') == 82)
        self.assertTrue(w2n.convert('drei und achtzig') == 83)
        self.assertTrue(w2n.convert('vier und achtzig') == 84)
        self.assertTrue(w2n.convert('fünf und achtzig') == 85)
        self.assertTrue(w2n.convert('sechs und achtzig') == 86)
        self.assertTrue(w2n.convert('sieben und achtzig') == 87)
        self.assertTrue(w2n.convert('acht und achtzig') == 88)
        self.assertTrue(w2n.convert('neun und achtzig') == 89)
        self.assertTrue(w2n.convert('neunzig') == 90)
        self.assertTrue(w2n.convert('ein und neunzig') == 91)
        self.assertTrue(w2n.convert('zwei und neunzig') == 92)
        self.assertTrue(w2n.convert('drei und neunzig') == 93)
        self.assertTrue(w2n.convert('vier und neunzig') == 94)
        self.assertTrue(w2n.convert('fünf und neunzig') == 95)
        self.assertTrue(w2n.convert('sechs und neunzig') == 96)
        self.assertTrue(w2n.convert('sieben und neunzig') == 97)
        self.assertTrue(w2n.convert('acht und neunzig') == 98)

print(AR.convert(100000000000543))
print(w2n.convert('zwei hundert acht und fünfzig'))
T = TestConverter()
#T.test_hardcoded_values_upto_100()